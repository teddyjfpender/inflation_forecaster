name: Daily Inflation Model Update

on:
  schedule:
    # Run at 6 AM UTC daily
    - cron: '0 6 * * *'
  # Allow manual triggering for testing
  workflow_dispatch:
  
permissions:
  contents: write

jobs:
  update_models:
    name: Run Inflation Models
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      - name: Set up environment variables
        env:
          BLS_API_KEY: ${{ secrets.BLS_API_KEY }}
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
        run: |
          echo "BLS_API_KEY=$BLS_API_KEY" > .env
          echo "FRED_API_KEY=$FRED_API_KEY" >> .env
          
      - name: Debug - Show environment and gitignore
        run: |
          echo "Current directory structure:"
          ls -la
          echo "\nAll .gitignore files:"
          find . -name .gitignore -exec echo "{}" \; -exec cat "{}" \;
          echo "\nEnvironment variables (safe display):"
          env | grep -E "BLS_API_KEY|FRED_API_KEY" | sed 's/=.*/=REDACTED/'
      
      - name: Run inflation models
        run: |
          echo "Running model..."
          python run_inflation_model.py
          echo "\nFiles in data directory after model run:"
          ls -la data/
          echo "\nContents of prediction store (if exists):"
          cat data/prediction_store.json || echo "prediction_store.json not found"
      
      - name: Debug - Show Git status and diff
        run: |
          echo "Git status:"
          git status
          echo "\nGit diff:"
          git diff
      
      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Changes detected:"
            git status --porcelain
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected"
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create branch with date
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          TODAY=$(date +'%Y-%m-%d')
          BRANCH_NAME="model-update-${TODAY}"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
      
      - name: Commit changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          TODAY=$(date +'%Y-%m-%d')
          git add data/ src/saved_models/ docs/images/
          git status
          git commit -m "Daily model update ${TODAY}" -m "Automated model update with latest economic data"
      
      - name: Push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git push -u origin $BRANCH_NAME
      
      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Daily model update ${{ env.BRANCH_NAME }}"
          body: |
            # Automated Daily Model Update
            
            This PR contains the latest inflation forecasts generated on $(date +'%Y-%m-%d').
            
            ## Changes include:
            - Updated model predictions in data/predictions/
            - Saved model files in src/saved_models/
            - Updated visualization charts in docs/images/
            
            Automatically generated by the daily model update workflow.
          branch: ${{ env.BRANCH_NAME }}
          base: main
          labels: automated,model-update
          draft: false
      
      - name: Auto-merge Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: pascalgn/automerge-action@v0.15.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_METHOD: squash
          MERGE_LABELS: automated,model-update
          MERGE_DELETE_BRANCH: true 