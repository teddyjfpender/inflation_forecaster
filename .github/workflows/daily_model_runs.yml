name: Daily Inflation Model Update

on:
  schedule:
    # Run at 6 AM UTC daily
    - cron: '0 6 * * *'
  # Allow manual triggering for testing
  workflow_dispatch:
  
permissions:
  contents: write
  pull-requests: write

jobs:
  update_models:
    name: Run Inflation Models
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      - name: Set up environment variables
        env:
          BLS_API_KEY: ${{ secrets.BLS_API_KEY }}
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
        run: |
          echo "BLS_API_KEY=$BLS_API_KEY" > .env
          echo "FRED_API_KEY=$FRED_API_KEY" >> .env
      
      - name: Create required directories
        run: |
          mkdir -p data/predictions/cpi_12_month_change
          mkdir -p src/saved_models
          mkdir -p docs/images
          
      - name: Debug - Pre-run state
        run: |
          echo "Current directory structure:"
          ls -la
          echo "\nPre-run data directory contents:"
          ls -la data/ || echo "data directory empty"
          ls -la data/predictions/ || echo "predictions directory empty"
          echo "\nPre-run saved_models directory contents:"
          ls -la src/saved_models/ || echo "saved_models directory empty"
      
      - name: Run inflation models
        run: |
          echo "Running model..."
          python run_inflation_model.py
          
      - name: Debug - Post-run state
        run: |
          echo "Post-run directory contents:"
          echo "\nData directory:"
          ls -la data/
          echo "\nPredictions directory:"
          ls -la data/predictions/cpi_12_month_change/
          echo "\nSaved models directory:"
          ls -la src/saved_models/
          echo "\nImages directory:"
          ls -la docs/images/
          
          echo "\nContents of prediction files:"
          for f in data/predictions/cpi_12_month_change/*.json; do
            echo "\nFile: $f"
            cat "$f"
          done
      
      - name: Prepare and commit changes
        id: prepare_changes
        run: |
          # Create new branch
          TODAY=$(date +'%Y-%m-%d')
          BRANCH_NAME="model-update-${TODAY}"
          git checkout -b $BRANCH_NAME
          
          # Stage specific files
          git add data/predictions/cpi_12_month_change/*.json
          git add data/prediction_store.json
          git add src/saved_models/*.pkl
          git add docs/images/*.png
          
          # Check if there are actual changes
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
            
            # Show what's about to be committed
            echo "Files to be committed:"
            git status --porcelain
            
            # Commit changes
            git commit -m "Daily model update $(date +'%Y-%m-%d')" -m "Automated model update with latest economic data"
            
            # Push to remote
            git push origin $BRANCH_NAME
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi
          
          # Export branch name for later steps
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      
      - name: Create Pull Request
        if: steps.prepare_changes.outputs.changes_detected == 'true'
        run: |
          # Create PR using GitHub CLI
          PR_URL=$(gh pr create \
            --title "Daily model update $(date +'%Y-%m-%d')" \
            --body "# Automated Daily Model Update

            This PR contains the latest inflation forecasts generated on $(date +'%Y-%m-%d').

            ## Changes include:
            - Updated model predictions in data/predictions/
            - Saved model files in src/saved_models/
            - Updated visualization charts in docs/images/

            Automatically generated by the daily model update workflow." \
            --base main \
            --head ${{ env.BRANCH_NAME }} \
            --label "automated" \
            --label "model-update")
          
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV
          
          # Enable auto-merge
          PR_NUMBER=$(echo $PR_URL | grep -oE '[0-9]+$')
          gh pr merge $PR_NUMBER --merge --auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 